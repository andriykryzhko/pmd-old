/* Generated By:JJTree: Do not edit this line. SimpleNode.java */

package net.sourceforge.pmd.jsp.ast;

import net.sourceforge.pmd.ast.Node;
import net.sourceforge.pmd.ast.JavaParserVisitor;
import net.sourceforge.pmd.ast.JavaNode;

public class SimpleNode extends net.sourceforge.pmd.ast.SimpleNode implements Node {

    protected JspParser parser;
    protected Node parent;
    protected Node[] children;

    public SimpleNode(int i) {
        super(i);
    }

    public SimpleNode(JspParser p, int i) {
        this(i);
        parser = p;
    }

    public Node jjtGetParent() {
        return parent;
    }

  public void jjtOpen() {
  }

  public void jjtClose() {
  }
  
    public Node jjtGetChild(int i) {
        return children[i];
    }

    public void jjtAddChild(Node n, int i) {
        if (children == null) {
            children = new Node[i + 1];
        } else if (i >= children.length) {
            Node c[] = new Node[i + 1];
            System.arraycopy(children, 0, c, 0, children.length);
            children = c;
        }
        children[i] = n;
    }

    public void jjtSetParent(Node n) {
        parent = n;
    }

  public Object jjtAccept(JspParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }

    /**
     * Accept the visitor. *
     */
    public Object childrenAccept(JspParserVisitor visitor, Object data) {
        if (children != null) {
            for (int i = 0; i < children.length; ++i) {
                ((SimpleNode)children[i]).jjtAccept(visitor, data);
            }
        }
        return data;
    }
  public String toString() { return JspParserTreeConstants.jjtNodeName[id]; }
  public String toString(String prefix) { return prefix + toString(); }

}

