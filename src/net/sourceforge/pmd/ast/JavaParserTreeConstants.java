/* Generated By:JJTree: Do not edit this line. C:/data/pmd/pmd/src/net/sourceforge/pmd/ast\JavaParserTreeConstants.java */

package net.sourceforge.pmd.ast;

public interface JavaParserTreeConstants {
    public int JJTCOMPILATIONUNIT = 0;
    public int JJTPACKAGEDECLARATION = 1;
    public int JJTIMPORTDECLARATION = 2;
    public int JJTTYPEDECLARATION = 3;
    public int JJTCLASSDECLARATION = 4;
    public int JJTUNMODIFIEDCLASSDECLARATION = 5;
    public int JJTCLASSBODY = 6;
    public int JJTNESTEDCLASSDECLARATION = 7;
    public int JJTCLASSBODYDECLARATION = 8;
    public int JJTMETHODDECLARATIONLOOKAHEAD = 9;
    public int JJTINTERFACEDECLARATION = 10;
    public int JJTNESTEDINTERFACEDECLARATION = 11;
    public int JJTUNMODIFIEDINTERFACEDECLARATION = 12;
    public int JJTINTERFACEMEMBERDECLARATION = 13;
    public int JJTFIELDDECLARATION = 14;
    public int JJTVARIABLEDECLARATOR = 15;
    public int JJTVARIABLEDECLARATORID = 16;
    public int JJTVARIABLEINITIALIZER = 17;
    public int JJTARRAYINITIALIZER = 18;
    public int JJTMETHODDECLARATION = 19;
    public int JJTMETHODDECLARATOR = 20;
    public int JJTFORMALPARAMETERS = 21;
    public int JJTFORMALPARAMETER = 22;
    public int JJTCONSTRUCTORDECLARATION = 23;
    public int JJTEXPLICITCONSTRUCTORINVOCATION = 24;
    public int JJTINITIALIZER = 25;
    public int JJTTYPE = 26;
    public int JJTPRIMITIVETYPE = 27;
    public int JJTRESULTTYPE = 28;
    public int JJTNAME = 29;
    public int JJTNAMELIST = 30;
    public int JJTEXPRESSION = 31;
    public int JJTASSIGNMENTOPERATOR = 32;
    public int JJTVOID = 33;
    public int JJTPREINCREMENTEXPRESSION = 34;
    public int JJTPREDECREMENTEXPRESSION = 35;
    public int JJTCASTLOOKAHEAD = 36;
    public int JJTCASTEXPRESSION = 37;
    public int JJTPRIMARYEXPRESSION = 38;
    public int JJTPRIMARYPREFIX = 39;
    public int JJTPRIMARYSUFFIX = 40;
    public int JJTLITERAL = 41;
    public int JJTBOOLEANLITERAL = 42;
    public int JJTNULLLITERAL = 43;
    public int JJTARGUMENTS = 44;
    public int JJTARGUMENTLIST = 45;
    public int JJTALLOCATIONEXPRESSION = 46;
    public int JJTARRAYDIMSANDINITS = 47;
    public int JJTSTATEMENT = 48;
    public int JJTLABELEDSTATEMENT = 49;
    public int JJTBLOCK = 50;
    public int JJTBLOCKSTATEMENT = 51;
    public int JJTLOCALVARIABLEDECLARATION = 52;
    public int JJTEMPTYSTATEMENT = 53;
    public int JJTSTATEMENTEXPRESSION = 54;
    public int JJTSWITCHSTATEMENT = 55;
    public int JJTSWITCHLABEL = 56;
    public int JJTIFSTATEMENT = 57;
    public int JJTWHILESTATEMENT = 58;
    public int JJTDOSTATEMENT = 59;
    public int JJTFORSTATEMENT = 60;
    public int JJTFORINIT = 61;
    public int JJTSTATEMENTEXPRESSIONLIST = 62;
    public int JJTFORUPDATE = 63;
    public int JJTBREAKSTATEMENT = 64;
    public int JJTCONTINUESTATEMENT = 65;
    public int JJTRETURNSTATEMENT = 66;
    public int JJTTHROWSTATEMENT = 67;
    public int JJTSYNCHRONIZEDSTATEMENT = 68;
    public int JJTTRYSTATEMENT = 69;
    public int JJTASSERTSTATEMENT = 70;


    public String[] jjtNodeName = {"CompilationUnit", "PackageDeclaration", "ImportDeclaration", "TypeDeclaration", "ClassDeclaration", "UnmodifiedClassDeclaration", "ClassBody", "NestedClassDeclaration", "ClassBodyDeclaration", "MethodDeclarationLookahead", "InterfaceDeclaration", "NestedInterfaceDeclaration", "UnmodifiedInterfaceDeclaration", "InterfaceMemberDeclaration", "FieldDeclaration", "VariableDeclarator", "VariableDeclaratorId", "VariableInitializer", "ArrayInitializer", "MethodDeclaration", "MethodDeclarator", "FormalParameters", "FormalParameter", "ConstructorDeclaration", "ExplicitConstructorInvocation", "Initializer", "Type", "PrimitiveType", "ResultType", "Name", "NameList", "Expression", "AssignmentOperator", "void", "PreIncrementExpression", "PreDecrementExpression", "CastLookahead", "CastExpression", "PrimaryExpression", "PrimaryPrefix", "PrimarySuffix", "Literal", "BooleanLiteral", "NullLiteral", "Arguments", "ArgumentList", "AllocationExpression", "ArrayDimsAndInits", "Statement", "LabeledStatement", "Block", "BlockStatement", "LocalVariableDeclaration", "EmptyStatement", "StatementExpression", "SwitchStatement", "SwitchLabel", "IfStatement", "WhileStatement", "DoStatement", "ForStatement", "ForInit", "StatementExpressionList", "ForUpdate", "BreakStatement", "ContinueStatement", "ReturnStatement", "ThrowStatement", "SynchronizedStatement", "TryStatement", "AssertStatement", };
}
