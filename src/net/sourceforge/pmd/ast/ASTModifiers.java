/* Generated By:JJTree: Do not edit this line. ASTModifiers.java */

package net.sourceforge.pmd.ast;

public class ASTModifiers extends SimpleNode {
  public ASTModifiers(int id) {
    super(id);
  }

  public ASTModifiers(JavaParser p, int id) {
    super(p, id);
  }

    public boolean isDiscardable() {
        return true;
    }

    public void discardIfNecessary() {
        SimpleNode parent = (SimpleNode)jjtGetParent();
        if (parent.jjtGetNumChildren() == 2) {
            if (jjtGetNumChildren() == 1 && jjtGetChild(0) instanceof ASTAnnotation) {
                // odd annotation case
                super.discardIfNecessary();
            } else {
                // conventional forloop syntax
                parent.children = new Node[] {parent.children[1]};
            }
        } else if (parent.jjtGetNumChildren() == 4) {
            // JDK 1.5 forloop syntax
            parent.children = new Node[] {parent.children[1], parent.children[2], parent.children[3]};
        } else {
            throw new RuntimeException("ASTModifiers.discardIfNecessary didn't see expected children");
        }
    }

  /** Accept the visitor. **/
  public Object jjtAccept(JavaParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
}
