/* Generated By:JJTree: Do not edit this line. ASTModifiers.java */

package net.sourceforge.pmd.ast;

public class ASTModifiers extends SimpleNode {
  public ASTModifiers(int id) {
    super(id);
  }

  public ASTModifiers(JavaParser p, int id) {
    super(p, id);
  }

    public boolean isDiscardable() {
        return true;
    }

    public void discardIfNecessary() {
        SimpleNode node = (SimpleNode)jjtGetParent();
        if (node.jjtGetNumChildren() > 2) {
            throw new RuntimeException("Hm, expected only two children when trimming out Modifiers node, found " + jjtGetNumChildren() + " instead.");
        }
        if (!(node.jjtGetChild(0) instanceof ASTModifiers)) {
            throw new RuntimeException("removeASTModifiersChild called but first child is not an ASTModifiers");
        }
        node.children = new Node[] {node.children[1]};
    }

  /** Accept the visitor. **/
  public Object jjtAccept(JavaParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
}
