<?xml version="1.0"?>

<document>
  <properties>
    <author email="tom@infoether.com">Tom Copeland</author>
    <title>Running PMD</title>
  </properties>

  <body>
   <section name="Running PMD via command line">
   <ul>
    <li>Type run [filename|jar or zip file containing source code|directory] [report format] [ruleset file], i.e:</li>
    <br></br>
    <source>
C:\tmp\pmd-1.8\pmd\etc&gt;run c:\data\pmd\pmd\test-data\Unused1.java xml rulesets/unusedcode.xml
&lt;?xml version="1.0"?&gt;&lt;pmd&gt;
&lt;file name="c:\data\pmd\pmd\test-data\Unused1.java"&gt;
&lt;violation line="5" rule="UnusedLocalVariable"&gt;
Avoid unused local variables such as 'fr'
&lt;/violation&gt;
&lt;/file&gt;&lt;/pmd&gt;

C:\tmp\pmd-1.8\pmd\etc&gt;
    </source>
       <p>Note that you can pass either a file name, a directory name, or
       a jar or zip file name containing Java source code to PMD.</p>
       <p>Note also that the PMD binary distribution includes the ruleset files
       inside the jar file - even though the "rulesets/unusedcode.xml" parameter
 above looks like a filesystem reference, it's really being used by a getResourceAsStream() call
 to load it out of the PMD jar file.  And the same applies to the example below.</p>

       <li>If you are using JDK 1.3 or you just want to run PMD without the batch file, you can do a:</li>
       <source>
C:\data\pmd\pmd>java -cp lib\pmd-1.9.jar;lib\xercesImpl-2.0.2.jar;
                    lib\xmlParserAPIs-2.0.2.jar;lib\jaxen-core-1.0-fcs.jar;lib\saxpath-1.0-fcs.jar
                     net.sourceforge.pmd.PMD
                     c:\j2sdk1.4.1_01\src\java\lang xml
                     rulesets/imports.xml
       </source>
<br></br>
    <li>Notice that in this case the output is in XML, so you can redirect it to a file and XSLT it or whatever</li>
       <li>The command line interface also accepts the following optional arguments:</li>
         <ul>
             <li><code>-debug</code> - prints a stacktrace if an error is encountered</li>
             <li><code>-shortnames</code> - puts shortened names in the report.  This only works if the filename argument is a single directory</li>
             <li><code>-jdk13</code> - assumes JDK 1.3 usage of the 'assert' keyword/identifier</li>
             <li><code>-encoding Cp1252</code> - uses the specific encoding for reading the source code files</li>
        </ul>
   </ul>
   </section>
  </body>
</document>




