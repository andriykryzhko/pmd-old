<?xml version="1.0"?>

<document>
  <properties>
    <author>Xavier Le Vourch, Ryan Gustavson, Romain Pelisse</author>
    <title>Last touches to a rules</title>
  </properties>

  <body>
  <p>
  	Here is a bunch of thing to do you may consider once your rule is "up and running".
  </p>
  <section name="How to define rules priority">
<p>
Rule priority may, of course, changes a lot depending on the context of the project. However, you can use the following guidelines to assert the legitimate
priority of your rule:
<ol>
	<li><strong>Change absolutely required.</strong>  Behavior is critically broken/buggy.</li>
	<li><strong>Change highly recommended.</strong>  Behavior is quite likely to be broken/buggy.</li>
	<li><strong>Change recommended.</strong>  Behavior is confusing, perhaps buggy, and/or against standards/best practices.</li>
	<li><strong>Change optional.</strong>  Behavior is not likely to be buggy, but more just flies in the face of standards/style/good taste.</li>
	<li><strong>Change highly optional.</strong> Nice to have, such as a consistent naming policy for package/class/fields...</li>
</ol>
</p>
<p>For instance, let's take the ExplicitCallToGC rule ("Do not explicitly trigger a garbage collection."). Calling GC is a bad idea, but it doesn't break the application.
So we skip priority one. However, as explicit call to gc may really hinder application performances, we set for the priority 2.
</p>
</section>

<section name="Performance issues">
<p>
when writing a new rule, using command line option "-benchmark" on a few rules can give an indication on how the rule compares to others.
To get the full picture, use the rulesets/internal/all-java.xml ruleset with "-benchmark".
</p>
</section>
<section name="Adding test cases">

</section>
<section name="Code quality">
<p>
If you want to contribute a java rule to PMD, you should run PMD on it (Using the dogfood rulesets), to ensure that you rule follow the rules defined by the PMD community.
</p>
<p>Also note, that if this is not a strong policy, most developers uses the berkeley braces syntax.</p>
</section>

</body>
</document>
