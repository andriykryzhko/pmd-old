<?xml version="1.0"?>

<ruleset name="newrules">
  <description>
These are new rules for the next release
  </description>


    <rule name="OptimizableToArrayCallRule"
          message="This call to Collection.toArray() may be optimizable"
          class="net.sourceforge.pmd.rules.XPathRule">
      <description>
  A call to Collection.toArray can use the Collection's size vs an empty Array of the desired type.
      </description>
      <properties>
          <property name="xpath">
              <value>
                  <![CDATA[
//PrimaryExpression
[PrimaryPrefix/Name[ends-with(@Image, 'toArray')]]
[
PrimarySuffix/Arguments/ArgumentList/Expression
 /PrimaryExpression/PrimaryPrefix/AllocationExpression
 /ArrayDimsAndInits/Expression/PrimaryExpression/PrimaryPrefix/Literal[@Image='0']
]

                  ]]>
              </value>
          </property>
      </properties>
        <priority>3</priority>

      <example>
  <![CDATA[
class Example {
 void bar() {
   // A bit inefficient, unlike...
   x.toArray(new Foo[0]);

   // ..this one, which sizes the destination array, avoiding
   // a reflection call in some Collection implementations
   x.toArray(new Foo[x.size()]);
}
}  ]]>
      </example>
    </rule>

    <rule name="BadComparisonRule"
          message="Avoid equality comparisons with Double.NaN"
          class="net.sourceforge.pmd.rules.XPathRule">
      <description>
  Avoid equality comparisons with Double.NaN - these are
likely to be logic errors.
      </description>
      <properties>
          <property name="xpath">
              <value>
                  <![CDATA[
//EqualityExpression[@Image='==']
 /PrimaryExpression/PrimaryPrefix
 /Name[@Image='Double.NaN' or @Image='Float.NaN']
                  ]]>
              </value>
          </property>
      </properties>
        <priority>3</priority>

      <example>
  <![CDATA[
public class Bar {
int x = (y == Double.NaN);
}
  ]]>
      </example>
    </rule>


    <rule name="ExceptionAsFlowControlRule"
          message="Avoid using exceptions as flow control"
          class="net.sourceforge.pmd.rules.design.ExceptionAsFlowControlRule">
      <description>
          Using Exceptions as flow control leads to GOTOish code.
      </description>
        <priority>3</priority>
      <example>
  <![CDATA[
  public class Foo {
   void bar() {
    try {
     try {
     } catch (Exception e) {
      throw new WrapperException(e);
      // this is essentially a GOTO to the WrapperException catch block
     }
    } catch (WrapperException e) {
     // do some more stuff
    }
   }
  }
  ]]>
      </example>
    </rule>


<rule name="AvoidCatchingNPERule"
    message="Avoid catching NullPointerException; consider removing the cause of the NPE."
    class="net.sourceforge.pmd.rules.XPathRule">
    <description>
      Code should never throw NPE under normal circumstances.  A catch block may hide the original error, causing other more subtle errors in its wake.
    </description>
    <example>  <![CDATA[
try {
  ...
} catch (NullPointerException npe) {
  ...
}
]]>
         </example>
    <priority> 3 </priority>
    <properties>
      <property name="xpath">
        <value>
            <![CDATA[
//TryStatement/FormalParameter/Type
 /Name[@Image='NullPointerException']
 ]]>
        </value>
      </property>
    </properties>
  </rule>

  <rule name="AvoidThrowingCertainExceptionTypesRule"
      message="Avoid throwing certain exception types."
      class="net.sourceforge.pmd.rules.XPathRule">
    <description>
 1) Avoid throwing certain exception types.  Rather than throw a raw RuntimeException, Throwable,
 Exception, or Error, use a subclassed exception or error instead.
 2) Avoid throwing a NullPointerException - it's confusing because most people will assume that the
 VM threw NPE.  Consider using InvalidArgumentException("Null parameter") which will be clearly seen as
a programmer initiated exception..  Use IllegalArgumentException or IllegalStateException instead.
    </description>
 <example>
      <![CDATA[
throw new Exception();
]]>
    </example>
    <priority> 1 </priority>
    <properties>
      <property name="xpath">
        <value>
            <![CDATA[
//AllocationExpression
 /Name[
 @Image='Throwable' |
 @Image='Exception' |
 @Image='Error' |
 @Image='RuntimeException' |
 @Image='NullPointerException']
 ]]>
        </value>
      </property>
    </properties>
  </rule>

</ruleset>


