<?xml version="1.0"?>

<ruleset name="newrules">
  <description>
These are new rules for the next release
  </description>


    <rule name="SymbolTableTestRule"
          message="test"
          class="net.sourceforge.pmd.rules.SymbolTableTestRule">
      <description>
      asdsad
      </description>
        <priority>3</priority>

      <example>
  <![CDATA[
  // asdadas
  ]]>
      </example>
    </rule>

    <rule name="IdempotentOperationsRule"
          message="Avoid idempotent operations"
          class="net.sourceforge.pmd.rules.IdempotentOperationsRule">
      <description>
      Avoid idempotent operations - they are silly.
      </description>
        <priority>3</priority>

      <example>
  <![CDATA[
public class Foo {
 public void bar() {
  int x = 2;
  x = x;
 }
}
  ]]>
      </example>
    </rule>


    <rule name="FinalizeShouldBeProtected"
          message="If you override finalize(), make it protected"
          class="net.sourceforge.pmd.rules.XPathRule">
      <description>
      If you override finalize(), make it protected
      </description>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
//MethodDeclaration[@Protected="false"]
  /MethodDeclarator[@Image="finalize"]
  [not(FormalParameters/*)]
                    ]]>
                </value>
            </property>
        </properties>
        <priority>3</priority>

      <example>
  <![CDATA[
public class Foo {
 public void bar() {
  int x = 2;
  x = x;
 }
}
  ]]>
      </example>
    </rule>

    <rule name="FinalFieldCouldBeStatic"
          message="This final field could be made static"
          class="net.sourceforge.pmd.rules.XPathRule">
      <description>
      If a final field is assigned to a compile-time constant, it could be
          made static, thus saving overhead in each object
      </description>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
//FieldDeclaration
 [@Final='true' and @Static='false']
 /VariableDeclarator/VariableInitializer
  /Expression/ConditionalAndExpression/InstanceOfExpression
   /PrimaryExpression/PrimaryPrefix/Literal
                    ]]>
                </value>
            </property>
        </properties>
        <priority>3</priority>

      <example>
  <![CDATA[
public class Foo {
 public final int BAR = 42; // this could be static and save some space
}
  ]]>
      </example>
    </rule>

  </ruleset>


