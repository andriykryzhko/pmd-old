<?xml version="1.0"?>

<ruleset name="newrules">
  <description>
These are new ones for the next release
  </description>

  <rule name="JUnitSpelling"
        message="You may have misspelled the JUnit framework ''{0}'' method as ''{1}''"
        class="net.sourceforge.pmd.rules.JUnitSpellingRule">
    <description>
    Some JUnit framework methods are easy to misspell.
    </description>

    <example>
<![CDATA[
import junit.framework.*;
public class Foo extends TestCase {
 public void setup() {} // oops, should be setUp
 public void TearDown() {} // oops, should be tearDown
}
]]>
    </example>
    </rule>


  <rule name="JUnitStaticSuite"
        message="You have a suite() method that is not both public and static, so JUnit won't call it to get your TestSuite.  Is that what you wanted to do?"
        class="net.sourceforge.pmd.rules.JUnitStaticSuiteRule">
    <description>
    The suite() method in a JUnit test needs to be both public and static.
    </description>

    <example>
<![CDATA[
import junit.framework.*;
public class Foo extends TestCase {
 public void suite() {} // oops, should be static
 private static void suite() {} // oops, should be public
}
]]>
    </example>
    </rule>

      <rule name="StringInstantiation"
        message="Avoid instantiating String objects; this is usually unnecessary."
        class="net.sourceforge.pmd.rules.StringInstantiationRule">
    <description>
    Avoid instantiating String objects; this is usually unnecessary.
    </description>

    <example>
<![CDATA[
public class Foo {
 private String bar = new String("bar"); // just do a String bar = "bar";
}
]]>
    </example>
    </rule>

  </ruleset>


