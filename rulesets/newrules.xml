<?xml version="1.0"?>

<ruleset name="newrules" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="../etc/ruleset_xml_schema.xml">
  <description>
These are new rules for the next release
  </description>

    <rule name="InstantiationToGetClass"
          message="Avoid instantiating an object just to call getClass() on it; use the .class public member instead"
          class="net.sourceforge.pmd.rules.XPathRule">
      <description>
Avoid instantiating an object just to call getClass() on it; use the .class public member instead
      </description>
        <example>
    <![CDATA[
class Foo {
 Class c = new String().getClass();
}
    ]]>
        </example>
        <priority>4</priority>
        <properties>
          <property name="xpath">
            <value>
                <![CDATA[
//PrimarySuffix
 [@Image='getClass']
 [parent::PrimaryExpression
  [PrimaryPrefix/AllocationExpression]
  [count(PrimarySuffix) = 2]
 ]
     ]]>
            </value>
          </property>
        </properties>
      </rule>

    <rule name="IdempotentOperationsRule"
          message="Avoid idempotent operations (like assigning a variable to itself)"
          class="net.sourceforge.pmd.rules.IdempotentOperationsRule">
      <description>
      Avoid idempotent operations - they are silly.
      </description>
        <priority>3</priority>

      <example>
      <![CDATA[
    public class Foo {
     public void bar() {
      int x = 2;
      x = x;
     }
    }
      ]]>
      </example>
    </rule>

    <rule
        name="SuspiciousEqualsMethodName"
        message="The method name and parameter number are suspiciously close to equals(Object)"
        class="net.sourceforge.pmd.rules.XPathRule">
        <description>
              The method name and parameter number are suspiciously close to
     equals(Object), which may mean you are trying (and failing) to override the equals(Object)
        method.
        </description>
        <properties>
            <property name="xpath">
                <value>
        <![CDATA[
//MethodDeclarator [
(
@Image = 'equals'
  and count(FormalParameters/*) = 1
  and not (FormalParameters/FormalParameter/Type/Name
   [@Image = 'Object' or @Image = 'java.lang.Object'])
)
or
@Image='equal'
 and count(FormalParameters/*) = 1
 and (FormalParameters/FormalParameter/Type/Name
  [@Image = 'Object' or @Image = 'java.lang.Object'])

]
        ]]>
                    </value>
                 </property>
              </properties>
        <priority>2</priority>
        <example>
        <![CDATA[
    public class Foo {
         public int equals(Object o) {
         // oops, this probably was supposed to be boolean equals
         }
         public boolean equals(String s) {
         // oops, this probably was supposed to be equals(Object)
         }
    }
        ]]>
        </example>
    </rule>

<rule
    name="SimpleDateFormatNeedsLocale"
    message="When instantiating a SimpleDateFormat object, specify a Locale"
    class="net.sourceforge.pmd.rules.XPathRule">
    <description>
        test
    </description>
    <properties>
        <property name="xpath">
            <value>
    <![CDATA[
//AllocationExpression
 [Name[@Image='SimpleDateFormat']]
 [Arguments[@ArgumentCount=1]]
    ]]>
                </value>
             </property>
          </properties>
    <priority>3</priority>
    <example>
    <![CDATA[
public class Foo {
 // Should specify Locale.US (or whatever)
 private SimpleDateFormat sdf = new SimpleDateFormat("pattern");
}
    ]]>
    </example>
</rule>

    <rule name="ImmutableFieldRule"
          symboltable="true"
          message="Private field could be made final.  It is only initialized in the declaration or constructor."
          class="net.sourceforge.pmd.rules.design.ImmutableFieldRule">
      <description>
      Identifies private fields whose values never change once they are initialized either in the declaration of the field or by
      a constructor.  This aids in converting existing classes to immutable classes.
      </description>
        <priority>3</priority>

      <example>
  <![CDATA[
  public class FinalFields {
      private int x;

      public FinalFields() {
          x = 7;
      }

      public void foo() {
         int a = x + 2;
      }

  }
  Identifies x as being eligible for making final.
  ]]>
      </example>
    </rule>


    </ruleset>


