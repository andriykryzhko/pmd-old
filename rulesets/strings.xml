<?xml version="1.0"?>

<ruleset name="Strings Rules">
  <description>
These rules deal with different problems that can occur with String manipulation.
  </description>


   <rule name="StringInstantiation"
        message="Avoid instantiating String objects; this is usually unnecessary."
        class="net.sourceforge.pmd.rules.StringInstantiationRule">
    <description>
    Avoid instantiating String objects; this is usually unnecessary.
    </description>

    <example>
<![CDATA[
public class Foo {
 private String bar = new String("bar"); // just do a String bar = "bar";
}
]]>
    </example>
    </rule>

    <rule name="AvoidStringLiterals"
        message="Avoid embedding String literals in your code"
        class="net.sourceforge.pmd.rules.AvoidStringLiteralsRule">
    <description>
Avoid String Literals detects when a literal String is embedded within your code.  Code like this can usually be
improved by declaring the String as a constant field.
    </description>
    <example>
<![CDATA[
public class Foo {
 private void bar() {
    buz("Howdy");
 }
 private void buz(String x) {}
}
]]>
    </example>
  </rule>

   <rule name="StringToString"
        message="Avoid calling toString() on String objects; this is unnecessary"
        class="net.sourceforge.pmd.rules.StringToStringRule">
    <description>
    Avoid calling toString() on String objects; this is unnecessary
    </description>

    <example>
<![CDATA[
public class Foo {
 private String baz() {
  String bar = "howdy";
  return bar.toString();
 }
}
]]>
    </example>
    </rule>

</ruleset>



